package data;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.concurrent.ExecutionException;

import javax.swing.SwingWorker;

import ui.Main;
import weather.CurrentWeather;
import weather.MarsWeather;
/**
 * Query object to fetch data from URL as JSON String
 * This object also handles bad and delayed Internet connection
 * This object keeps pulling until get an empty JSON String
 * The can also be interrupted by Main interrupt method in Main 
 * The JSON String can be mars data, short term data, long term data
 * current weather data and error message data
 * The error message data is handled by Main Window
 * 
 * @author ca.uwo.csd.cs2212.team8
 */
public class Query {
	// attribute
	private String JSon; // field to store the returned JSON String
	private String address; // field to store the URL address generated by constructor
	private final int CURRENT_WEATHER = 0, // array index for current weather
					  THREE_HOUR_FORECAST = 1, // array index for short term
					  DAILY_FORECAST = 2; // array index for long term
	
	/**
	 * Get JSon file for the location according to forecast type
	 * @param location City name, Country initial in String
	 * @param type indicator for long, short, current, mars
	 */
	public Query(String location, int type){
		JSon = "";
		// generate data according to location and type
		switch(type){
		// for open weather map, we use three different APPID to release data pressure
		case CURRENT_WEATHER:
			address = "http://api.openweathermap.org/data/2.5/weather?q=" + location
			+ "&APPID=1b9a3efc4f0b62ef0b0ba00532015985";
			break;
		case THREE_HOUR_FORECAST:
			address = "http://api.openweathermap.org/data/2.5/forecast?q=" + location+ 
			"&APPID=a59d2137be4e7f2ef70800bb88f5a7f5";
			break;
		case DAILY_FORECAST:
			address = "http://api.openweathermap.org/data/2.5/forecast/daily?q=" + location 
			+"&mode=json&cnt=6&APPID=bed420cd0cdd025a171927dacc52d5d7";
			break;
		default:
			address = "http://marsweather.ingenology.com/v1/latest/?format=json";
		}
		// array to store the type of URL
		String[] s = {"Current", "Short-term", "Long-term", "Mars"};
		URL url;
		// keep pulling until we get a JSON String
		while(true){
			try {
				// make connection according to the URL address
				url = new URL(address);
				URLConnection connect = url.openConnection();
				// set read/connect timeout
				connect.setConnectTimeout(2000);
				connect.setReadTimeout(5000);
				// read from URL
				BufferedReader br = new BufferedReader(new InputStreamReader(connect.getInputStream()));
				JSon = br.readLine();
				// if finish pulling print message
				System.out.println(s[type] + " Finish");
				// pull successfully break the loop
				break;
				} catch (MalformedURLException e) {
					// URL format error should not happen
					e.printStackTrace();
				} catch (IOException e) {
					// if time out, set message, pull again
					System.out.println(s[type] + " Connection failed");
			}
		}
		
	}
	
	/**
	 * method to get the content of JSON string
	 * @return String JSON string
	 */
	public String toString(){
		return this.JSon;
	}
	
	/**
	 * test method for Query
	 * @param args system parameter
	 */
	public static void main(String[] args){
		Query q1 = new Query("shijiazhuang,cn", 2);
		JSONObject data = new JSONObject(q1.toString());
		System.out.println(data.getInt("cnt"));
	}
	
	
}
